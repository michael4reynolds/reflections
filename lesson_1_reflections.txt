How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was helpful to have a visual reference with line numbers and colors
    to see where and what the differences were thereby enabling me to make
    the correct changes.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It will enable me to see my train of thought as I progress as well as
    revert back to working versions if/when something breaks.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    I get to choose based on my judgement logical times that I can go back to
    in the code. I also allows the building process to be documented in a way
    that makes sense.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    It depends on the systems objective as to why saving your Google Docs files
    would treat each file differently.

How can you use the commands git log and git diff to view the history of files?

    I use git log to get the commit ids. Then use git diff to make comparisions
    to the older ids listed below it or the newer ids listed above it.

How might using version control make you more confident to make changes that
could break something?

    Because I can always revert back to a working version.

Now that you have your workspace set up, what do you want to try using Git for?

    I'll use git to keep track of my changes in my projects as well as to see
    my progression